openapi: "3.0.0"
info:
  description: Nixiesearch API Reference documentation.
  contact:
    email: roman@nixiesearch.ai
  version: 1.0.0
  title: Nixiesearch
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://demo.nixiesearch.ai/v1
paths:
  /index:
    get:
      summary: List all available indexes on the current node.
      operationId: listIndexes
      tags:
        - index
      parameters:
      responses:
        200:
          description: A list of indexes.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Indexes"
  /pets:
    get:
      summary: List all pets
      operationId: listIndexes
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Indexes:
      type: object
      properties:
        indexes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: "wip"
                example: "my-index"
              aliases:
                type: array
                items:
                  type: string
                  description:
                  example: "index-alias"
        total:
          type: integer
          example: 1
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string